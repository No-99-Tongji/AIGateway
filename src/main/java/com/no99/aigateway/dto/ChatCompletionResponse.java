package com.no99.aigateway.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.List;

@Schema(description = "Chat completion response following OpenAI API format")
public class ChatCompletionResponse {
    @Schema(description = "A unique identifier for the chat completion", example = "chatcmpl-abc12345")
    private String id;

    @Schema(description = "The object type, which is always 'chat.completion'", example = "chat.completion")
    private String object;

    @Schema(description = "The Unix timestamp (in seconds) of when the chat completion was created", example = "1697123456")
    private Long created;

    @Schema(description = "The model used for the chat completion", example = "deepseek")
    private String model;

    @Schema(description = "A list of chat completion choices")
    private List<Choice> choices;

    @Schema(description = "Usage statistics for the completion request")
    private Usage usage;

    public ChatCompletionResponse() {}

    public ChatCompletionResponse(String id, String model, String content) {
        this.id = id;
        this.object = "chat.completion";
        this.created = System.currentTimeMillis() / 1000;
        this.model = model;
        this.choices = List.of(new Choice(0, new Message("assistant", content), "stop"));
        this.usage = new Usage(0, 0, 0); // 简化的使用统计
    }

    // Getter和Setter方法
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getObject() {
        return object;
    }

    public void setObject(String object) {
        this.object = object;
    }

    public Long getCreated() {
        return created;
    }

    public void setCreated(Long created) {
        this.created = created;
    }

    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public List<Choice> getChoices() {
        return choices;
    }

    public void setChoices(List<Choice> choices) {
        this.choices = choices;
    }

    public Usage getUsage() {
        return usage;
    }

    public void setUsage(Usage usage) {
        this.usage = usage;
    }

    // Choice内部类
    @Schema(description = "A chat completion choice")
    public static class Choice {
        @Schema(description = "The index of the choice in the list of choices", example = "0")
        private Integer index;

        @Schema(description = "A chat completion message generated by the model")
        private Message message;

        @JsonProperty("finish_reason")
        @Schema(description = "The reason the model stopped generating tokens",
                allowableValues = {"stop", "length", "function_call", "content_filter"}, example = "stop")
        private String finishReason;

        public Choice() {}

        public Choice(Integer index, Message message, String finishReason) {
            this.index = index;
            this.message = message;
            this.finishReason = finishReason;
        }

        public Integer getIndex() {
            return index;
        }

        public void setIndex(Integer index) {
            this.index = index;
        }

        public Message getMessage() {
            return message;
        }

        public void setMessage(Message message) {
            this.message = message;
        }

        public String getFinishReason() {
            return finishReason;
        }

        public void setFinishReason(String finishReason) {
            this.finishReason = finishReason;
        }
    }

    // Message内部类
    @Schema(description = "A chat completion message generated by the model")
    public static class Message {
        @Schema(description = "The role of the author of this message", example = "assistant")
        private String role;

        @Schema(description = "The contents of the message", example = "Hello! How can I help you today?")
        private String content;

        public Message() {}

        public Message(String role, String content) {
            this.role = role;
            this.content = content;
        }

        public String getRole() {
            return role;
        }

        public void setRole(String role) {
            this.role = role;
        }

        public String getContent() {
            return content;
        }

        public void setContent(String content) {
            this.content = content;
        }
    }

    // Usage内部类
    @Schema(description = "Usage statistics for the completion request")
    public static class Usage {
        @JsonProperty("prompt_tokens")
        @Schema(description = "Number of tokens in the prompt", example = "10")
        private Integer promptTokens;

        @JsonProperty("completion_tokens")
        @Schema(description = "Number of tokens in the generated completion", example = "20")
        private Integer completionTokens;

        @JsonProperty("total_tokens")
        @Schema(description = "Total number of tokens used in the request (prompt + completion)", example = "30")
        private Integer totalTokens;

        public Usage() {}

        public Usage(Integer promptTokens, Integer completionTokens, Integer totalTokens) {
            this.promptTokens = promptTokens;
            this.completionTokens = completionTokens;
            this.totalTokens = totalTokens;
        }

        public Integer getPromptTokens() {
            return promptTokens;
        }

        public void setPromptTokens(Integer promptTokens) {
            this.promptTokens = promptTokens;
        }

        public Integer getCompletionTokens() {
            return completionTokens;
        }

        public void setCompletionTokens(Integer completionTokens) {
            this.completionTokens = completionTokens;
        }

        public Integer getTotalTokens() {
            return totalTokens;
        }

        public void setTotalTokens(Integer totalTokens) {
            this.totalTokens = totalTokens;
        }
    }
}
